{
  "$schema": "https://raw.githubusercontent.com/nrwl/nx/master/packages/nx/schemas/nx-schema.json",
  "affected": {
    "defaultBase": "remotes/origin/main"
  },
  "cli": {
    "schematicCollections": [
      "@schematics/angular",
      "@nx/angular",
      "@o3r/core"
    ],
    "analytics": false,
    "packageManager": "yarn",
    "cache": {
      "enable": true,
      "environment": "all",
      "path": ".cache/angular"
    }
  },
  "tasksRunnerOptions": {
    "default": {
      "runner": "nx-cloud",
      "options": {
        "useDaemonProcess": false,
        "cacheableOperations": [
          "prepare",
          "compile",
          "build",
          "build-cjs",
          "build-esm2015",
          "build-react",
          "build-panel",
          "build-wrapper",
          "build-source",
          "build-builders",
          "build-schematics",
          "build-extension",
          "build-components",
          "build-tools",
          "build-plugins",
          "build-fixtures",
          "build-fixtures-jasmine",
          "build-fixtures-jest",
          "copy-assets",
          "documentation",
          "extract-translations",
          "extract-components",
          "extract-style",
          "extract-rules-engine",
          "lint",
          "prepare-build-builders",
          "test",
          "test-int",
          "build-swagger"
        ],
        "cacheDirectory": ".cache/nx"
      }
    }
  },
  "namedInputs": {
    "global": [
      "{workspaceRoot}/package.json",
      "{workspaceRoot}/tsconfig.base.json",
      "{workspaceRoot}/tsconfig.build.json",
      "{workspaceRoot}/nx.json"
    ],
    "default": [
      "global",
      "{projectRoot}/src/**/*",
      "{projectRoot}/package.json",
      "{projectRoot}/project.json"
    ],
    "jasmine-fixtures": [
      "global",
      "{projectRoot}/**/fixtures/jasmine/**/*.ts"
    ],
    "jest-fixtures": [
      "global",
      "{projectRoot}/**/fixtures/jasmine/**/*.ts"
    ],
    "builders": [
      "global",
      "{projectRoot}/builders.json",
      "{projectRoot}/builders/**/*",
      "{projectRoot}/package.json"
    ],
    "schematics": [
      "global",
      "{projectRoot}/migration.json",
      "{projectRoot}/collection.json",
      "{projectRoot}/schematics/**/*",
      "{projectRoot}/package.json"
    ],
    "middlewares": [
      "global",
      "{projectRoot}/middlewares/**/*",
      "{projectRoot}/package.json"
    ],
    "lint": [
      "default",
      "{workspaceRoot}/.eslintrc.json",
      "{workspaceRoot}/.eslintignore"
    ],
    "specs": [
      "default"
    ],
    "source": [
      "default",
      "!{projectRoot}/plugins/**/*",
      "!{projectRoot}/builders.json",
      "!{projectRoot}/builders/**/*",
      "!{projectRoot}/migration.json",
      "!{projectRoot}/collection.json",
      "!{projectRoot}/schematics/**/*",
      "!{projectRoot}/**/*.spec.ts",
      "!{projectRoot}/testing/**/*",
      "!{projectRoot}/mocks/**/*",
      "!{projectRoot}/jest.config.*",
      "{projectRoot}/package.json"
    ],
    "plugins": [
      "global",
      "{projectRoot}/plugins/**/*",
      "{projectRoot}/package.json"
    ]
  },
  "targetDefaults": {
    "lint": {
      "inputs": [
        "lint"
      ]
    },
    "test": {
      "inputs": [
        "specs",
        "^specs"
      ]
    },
    "test-int": {
      "outputs": [
        "{projectRoot}/dist-test/it-report.xml"
      ]
    },
    "prepare-publish": {
      "outputs": [
        "{projectRoot}/dist/package.json"
      ]
    },
    "publish-extension": {},
    "build": {
      "dependsOn": [
        "^build"
      ],
      "outputs": []
    },
    "compile": {
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "source",
        "^source"
      ],
      "outputs": [
        "{projectRoot}/dist"
      ]
    },
    "build-fixtures": {
      "inputs": [
        "jasmine-fixtures",
        "jest-fixtures"
      ],
      "outputs": [
        "{projectRoot}/dist/fixtures/jasmine",
        "{projectRoot}/dist/fixtures/jest"
      ],
      "dependsOn": [
        "build-fixtures-jasmine",
        "build-fixtures-jest"
      ]
    },
    "build-fixtures-jasmine": {
      "inputs": [
        "jasmine-fixtures"
      ],
      "outputs": [
        "{projectRoot}/dist/fixtures/jasmine"
      ],
      "dependsOn": [
        "compile"
      ]
    },
    "build-fixtures-jest": {
      "inputs": [
        "jest-fixtures"
      ],
      "outputs": [
        "{projectRoot}/dist/fixtures/jest"
      ],
      "dependsOn": [
        "compile"
      ]
    },
    "prepare-build-builders": {
      "dependsOn": [
        "compile"
      ],
      "inputs": [
        "builders",
        "schematics",
        "middlewares",
        "^source"
      ],
      "outputs": [
        "{projectRoot}/dist/builders.json",
        "{projectRoot}/dist/migration.json",
        "{projectRoot}/dist/collection.json",
        "{projectRoot}/dist/builders/**/*.json",
        "{projectRoot}/dist/schemas/**/*.json",
        "{projectRoot}/dist/schematics/**/*.json",
        "{projectRoot}/dist/schematics/**/templates/**"
      ]
    },
    "build-builders": {
      "dependsOn": [
        "^build",
        "compile",
        "prepare-build-builders"
      ],
      "inputs": [
        "builders",
        "schematics",
        "middlewares",
        "^source"
      ],
      "outputs": [
        "{projectRoot}/dist/builders/**/*.js",
        "{projectRoot}/dist/builders/**/*.d.ts",
        "{projectRoot}/dist/builders/**/*.d.ts.map",
        "{projectRoot}/dist/schematics/**/*.js",
        "{projectRoot}/dist/schematics/**/*.d.ts",
        "{projectRoot}/dist/schematics/**/*.d.ts.map",
        "{projectRoot}/dist/middlewares/**/*.js",
        "{projectRoot}/dist/middlewares/**/*.d.ts",
        "{projectRoot}/dist/middlewares/**/*.d.ts.map",
        "{projectRoot}/build/.tsbuildinfo.builders"
      ]
    },
    "build-plugins": {
      "dependsOn": [
        "^build",
        "compile"
      ],
      "inputs": [
        "plugins"
      ],
      "outputs": [
        "{projectRoot}/dist/plugins",
        "{projectRoot}/build/plugins"
      ]
    },
    "documentation": {
      "outputs": [
        "{workspaceRoot}/generated-doc/{projectName}/**/*"
      ],
      "inputs": [
        "source"
      ]
    }
  },
  "generators": {
    "@schematics/angular:component": {
      "style": "scss"
    },
    "@o3r/core:module": {
      "path": "packages",
      "prefix": "o3r"
    }
  },
  "defaultProject": "core",
  "workspaceLayout": {
    "libsDir": "packages",
    "appsDir": "apps"
  }
}
