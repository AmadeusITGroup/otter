name: Code check

on:
  workflow_call:
    inputs:
      affected:
        type: boolean
        required: false
        default: false
        description: Run test only on affective packages if true
      skipNxCache:
        type: boolean
        default: false
        required: false
        description: Skip the nx cache
    secrets:
      NX_CLOUD_ACCESS_TOKEN:
        required: false
        description: Token to use Nx Cloud token

env:
  NX_SKIP_NX_CACHE: ${{ inputs.skipNxCache }}
  YARN_ENABLE_HARDENED_MODE: 0

permissions:
  contents: read

jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
    - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
    - uses: gaurav-nelson/github-action-markdown-link-check@d53a906aa6b22b8979d33bc86170567e619495ec # v1.0.15
      with:
        base-branch: 'main'
        config-file: '.github/markdown-links.config.json'
        folder-path: 'packages/,apps/,tools/'

  test:
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(github.event_name != 'push' && '["ubuntu-latest", "windows-latest"]' || '["ubuntu-latest"]') }}
    runs-on: ${{ matrix.os }}
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: ${{ inputs.affected && '0' || '1' }}
      - name: Setup
        uses: ./tools/github-actions/setup
      - uses: ./.github/actions/setup-java
        with:
          install-jdk: 'true'
      - name: Cache Jest
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        env:
          hash: ${{ hashFiles('package.json', 'tsconfig.base.json', 'tsconfig.build.json', 'nx.json') }}
        with:
          path: .cache/jest
          key: ${{ runner.os }}-jest-${{ env.hash }}
          restore-keys: |
            ${{ runner.os }}-jest-${{ env.hash }}
            ${{ runner.os }}-jest
            ${{ runner.os }}
      - name: Build swagger generator
        run: yarn nx run ama-sdk-schematics:build-swagger
      - name: Test
        env:
          testCmd: ${{ inputs.affected && format('test:affected --base=remotes/origin/{0}', github.base_ref || github.ref_name) || 'test'}}
          NODE_OPTIONS: ${{ runner.os == 'Windows' && '--max_old_space_size=4096' || '' }}
        run: yarn ${{ env.testCmd }}
      - name: Publish tests reports
        if: always()
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ut-reports-${{ matrix.os }}
          path: |
            apps/**/dist-test/ut-report.xml
            packages/**/dist-test/ut-report.xml
            tools/**/dist-test/ut-report.xml
  lint:
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: ${{ inputs.affected && '0' || '1' }}
      - name: Setup
        uses: ./tools/github-actions/setup
      - name: Cache Eslint
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: .cache/eslint
          key: ${{ runner.os }}-eslint-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-eslint-${{ env.hash }}
            ${{ runner.os }}-eslint
            ${{ runner.os }}
      - name: Lint
        env:
          lintCmd: ${{ inputs.affected && format('lint:affected --base=remotes/origin/{0}', github.base_ref || github.ref_name) || 'lint'}}
        run: yarn ${{ env.lintCmd }} --configuration ci
