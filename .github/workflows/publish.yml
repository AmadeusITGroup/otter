name: Publish Packages

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
        description: Version of the artifact to publish
      prerelease:
        type: boolean
        default: false
        required: false
        description: Version of the artifact to publish
      isPullRequest:
        type: boolean
        default: ${{ github.event_name == 'pull_request' }}
        required: false
      skipNxCache:
        type: boolean
        default: false
        required: false
        description: Skip the nx cache
      gitRef:
        type: string
        default: ''
        required: false
        description: Checkout a specific git ref
    secrets:
      AZURE_VSC_EXT_TOKEN:
        required: false
        description: Token to publish Visual Studio Code extension
      NPM_TOKEN:
        required: false
        description: PAT to publish on npmjs.org
      AZURE_AUTH_TOKEN:
        required: false
        description: Token of the user publishing on Azure Feeds for PR Artifacts
      AZURE_USERNAME:
        required: false
        description: Name of the user publishing on Azure Feeds for PR Artifacts
      AZURE_EMAIL:
        required: false
        description: Email of the user publishing on Azure Feeds for PR Artifacts
      CASCADING_AZURE_APP_PUBLISH_PROFILE:
        required: false
        description: Profile authentication to publish the Cascading Application

env:
  NX_SKIP_NX_CACHE: ${{ inputs.skipNxCache }}

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    environment: ${{inputs.isPullRequest && 'development' || 'production'}}
    permissions:
      contents: read
      # Needed to publish with provenance
      id-token: write
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 2
          ref: ${{ inputs.gitRef }}
      - uses: ./tools/github-actions/download-build-output
      - uses: ./tools/github-actions/setup
      - run: yarn set:version ${{ inputs.version }}
      - name: Get tag name
        id: get-npm-tag
        uses: ./tools/github-actions/get-npm-tag
        with:
          is-prerelease: ${{ inputs.prerelease }}
          version: ${{ inputs.version }}
      - name: Publish
        run: yarn run publish --tag=${{ inputs.isPullRequest && 'pr' || steps.get-npm-tag.outputs.tag }} ${{ inputs.isPullRequest && '--userconfig=./.npmrc.pr' || ''}} --always-auth=true ${{ !inputs.isPullRequest && '--provenance' || ''}}
        env:
          GITHUB_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          AZURE_AUTH_TOKEN: ${{ secrets.AZURE_AUTH_TOKEN }}
          AZURE_USERNAME: ${{ secrets.AZURE_USERNAME }}
          AZURE_EMAIL: ${{ secrets.AZURE_EMAIL }}

  publish-cascading:
    if: '!inputs.isPullRequest'
    runs-on: ubuntu-latest
    env:
      APP_PATH: 'apps/github-cascading-app/dist'
    environment: 'cascading-app'
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 2
      - uses: ./tools/github-actions/download-build-output
      - uses: ./tools/github-actions/setup
      - run: yarn set:version ${{ inputs.version }}
      - name: Get tag name
        id: get-npm-tag
        uses: ./tools/github-actions/get-npm-tag
        with:
          is-prerelease: ${{ inputs.prerelease }}
          version: ${{ inputs.version }}
      - name: 'NPM install locally'
        run: |
          pushd './${{env.APP_PATH}}'
          npm install
          popd
      - name: 'Publish Cascading Azure Functions'
        env:
          PUBLISH_PROFILE: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_8996AC226FB9456EA73A6B8439B12946 || secrets.CASCADING_AZURE_APP_PUBLISH_PROFILE }}
        if: env.PUBLISH_PROFILE != null && (github.base_ref == 'main' || github.ref_name == 'main')
        uses: Azure/functions-action@238dc3c45bb1b04e5d16ff9e75cddd1d86753bd6 # v1.5.1
        with:
          app-name: 'github-cascading'
          slot-name: 'production'
          package: './${{env.APP_PATH}}'
          publish-profile: ${{ env.PUBLISH_PROFILE }}

  publish-extensions:
    runs-on: ubuntu-latest
    environment: ${{inputs.isPullRequest && 'development' || 'production'}}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 2
      - uses: ./tools/github-actions/download-build-output
      - uses: ./tools/github-actions/setup
      - run: yarn set:version ${{ inputs.version }}
      - name: Publish Extensions
        if: '!inputs.prerelease'
        run: yarn run ${{ endsWith(inputs.version, '.0') && 'publish:extensions' || 'publish:extensions:affected --base=HEAD~1' }}
        env:
          VSCE_PAT: ${{ secrets.AZURE_VSC_EXT_TOKEN }}
          CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          CHROME_EXT_ID: ${{ secrets.CHROME_EXT_ID }}
          CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
      - name: Expose Chrome extension artifact
        if: '!inputs.prerelease'
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: chrome-extension
          path: apps/chrome-devtools/chrome-extension.zip
