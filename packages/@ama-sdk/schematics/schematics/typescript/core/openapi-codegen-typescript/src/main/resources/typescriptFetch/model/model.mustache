{{#noUnusedImport}}
/**
 * Model: {{classname}}
 *
 * THIS FILE HAS BEEN AUTOMATICALLY GENERATED. DO NOT EDIT.
 *
 */

{{#models}}
  {{#model}}
    {{^isEnum}}
import {utils} from '@ama-sdk/core';
    {{/isEnum}}
  {{/model}}
{{/models}}

{{#imports}}
import { {{import}} } from '../{{#kebabCase}}{{import}}{{/kebabCase}}';
{{/imports}}

{{#models}}
{{#model}}
  {{#description}}
/**
 * {{{description}}}
 */
  {{/description}}
    {{^isEnum}}
      {{^oneOf}}
export interface {{classname}} {{#parent}}extends {{{parent}}} {{/parent}}{
      {{#vars}}
        {{#description}}
  /** {{{description}}} */
        {{/description}}
        {{^description}}
          {{#isArray}}
  /** List of {{#plurialize}}{{#noArrayInType}}{{{dataType}}}{{/noArrayInType}}{{/plurialize}} */
          {{/isArray}}
          {{^isArray}}
            {{^isPrimitiveType}}
              {{#datatypeWithEnum}}
  /** @see {{datatypeWithEnum}} */
              {{/datatypeWithEnum}}
            {{/isPrimitiveType}}
            {{#isEnum}}
              {{#datatypeWithEnum}}
  /** @see {{datatypeWithEnum}} */
              {{/datatypeWithEnum}}
            {{/isEnum}}
          {{/isArray}}
        {{/description}}
  {{#readOnly}}  readonly {{/readOnly}}{{#propertyDeclaration}}{{baseName}}{{/propertyDeclaration}}{{^required}}?{{/required}}: {{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{^isAnyType}}{{#isNullable}} | null{{/isNullable}}{{/isAnyType}};
      {{/vars}}
      {{#vars}}
        {{#vendorExtensions}}
          {{#x-field-name}}
            {{^x-field-exists}}
  /** Dictionary extraction for {{baseName}} */
  {{#readOnly}}readonly {{/readOnly}}{{x-field-name}}{{^required}}?{{/required}}: {{x-field-type}};
            {{/x-field-exists}}
          {{/x-field-name}}
        {{/vendorExtensions}}
      {{/vars}}
      {{#vars}}
        {{#vendorExtensions}}
          {{#x-map-name}}
  /** Dictionary extraction for {{baseName}} */
  {{#readOnly}}readonly {{/readOnly}}{{x-map-name}}{{^required}}?{{/required}}: { [key: string]: {{x-field-type}} | undefined };
          {{/x-map-name}}
        {{/vendorExtensions}}
      {{/vars}}
}
    {{/oneOf}}
    {{#oneOf}}
      {{#-first}}
export type {{classname}} = {{#oneOf}}{{.}}{{^-last}} | {{/-last}}{{/oneOf}};
      {{/-first}}
    {{/oneOf}}

    {{#hasEnums}}
      {{#allVars}}
        {{#isEnum}}
/** Array of {{#removeBrackets}}{{{datatypeWithEnum}}}{{/removeBrackets}} items */
export const {{#upperSnakeCase}}list{{#removeBrackets}}{{{datatypeWithEnum}}}{{/removeBrackets}}{{/upperSnakeCase}} = [{{#trimComma}}{{#vendorExtensions}}{{#x-sanitized-allowable-values}}'{{.}}'{{^-last}}, {{/-last}}{{/x-sanitized-allowable-values}}{{/vendorExtensions}}{{/trimComma}}] as const;

/** List of available values for {{#removeBrackets}}{{{datatypeWithEnum}}}{{/removeBrackets}} */
export type {{#removeBrackets}}{{{datatypeWithEnum}}}{{/removeBrackets}} = {{#trimPipe}}{{#allowableValues}}{{#values}}'{{.}}' | {{/values}}{{/allowableValues}}{{/trimPipe}};
        {{/isEnum}}
      {{/allVars}}
    {{/hasEnums}}

    {{#vars}}
      {{#pattern}}
/** Validation regex for {{baseName}} */
export const {{baseName}}Pattern = {{#parseRegexp}}{{{pattern}}}{{/parseRegexp}};
      {{/pattern}}
    {{/vars}}
  {{/isEnum}}
  {{#isEnum}}
/** Array of {{classname}} items */
export const {{#upperSnakeCase}}list{{classname}}{{/upperSnakeCase}} = [{{#trimComma}}{{#allowableValues}}{{#values}}'{{.}}'{{^-last}}, {{/-last}}{{/values}}{{/allowableValues}}{{/trimComma}}] as const;

/** List of available values for {{classname}} */
export type {{classname}} = typeof {{#upperSnakeCase}}list{{classname}}{{/upperSnakeCase}}[number];
  {{/isEnum}}
{{/model}}
{{/models}}
{{/noUnusedImport}}
