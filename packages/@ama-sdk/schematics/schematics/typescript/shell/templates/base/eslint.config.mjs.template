import o3rConfig from '@o3r/eslint-config';
import globals from 'globals';
import { dirname } from 'node:path';
import { fileURLToPath } from 'node:url';

// eslint-disable-next-line no-underscore-dangle
const __filename = fileURLToPath(import.meta.url);
// __dirname is not defined in ES module scope
// eslint-disable-next-line no-underscore-dangle
const __dirname = dirname(__filename);

export default [
  ...o3rConfig,
  {
    name: '<%= projectPackageName %>/report-unused-disable-directives',
    linterOptions: {
      reportUnusedDisableDirectives: 'error'
    }
  },
  {
    name: '<%= projectPackageName %>/projects',
    languageOptions: {
      sourceType: 'commonjs',
      parserOptions: {
        tsconfigRootDir: __dirname,
        projectService: true
      },
      ecmaVersion: 12
    }
  },
  {
    name: '<%= projectPackageName %>/globals',
    languageOptions: {
      globals: {
        ...globals.browser,
        ...globals.node,
        ...globals.webextensions,
        globalThis: true
      },
      ecmaVersion: 12
    },
    settings: {
      'import/resolver': {
        node: true,
        typescript: {
          project: './tsconfig.base.json'
        }
      }
    }
  },
  {
    name: '<%= projectPackageName %>/ignores',
    ignores: [
      '/src/api',
      '/src/models/base',
      '/src/spec/api-mocks.ts',
      '/src/spec/operation-adapter.ts',
      '/dist',
      '/build',
      '/scripts',
      '/jest.config.js'
    ]
  },
  {
    name: '@o3r-training/showcase-sdk/typescript-files',
    files: ['**/*.ts'],
    rules: {
      '@typescript-eslint/no-unused-vars': 'off',
      '@typescript-eslint/naming-convention': 'off',
      '@typescript-eslint/restrict-template-expressions': 'off',
      'max-len': 'off',
      'no-redeclare': 'off',
      'no-use-before-define': 'off',
      'no-useless-escape': 'off',
      'import/export': 'off'
    }
  },
  {
    name: '<%= projectPackageName %>/helpers',
    files: ['*.helper.ts'],
    rules: {
      '@typescript-eslint/explicit-function-return-type': 'error'
    }
  },
  {
    name: '<%= projectPackageName %>/javascript',
    files: ['*.js'],
    rules: {
      '@typescript-eslint/restrict-template-expressions': 'off'
    }
  }
];
