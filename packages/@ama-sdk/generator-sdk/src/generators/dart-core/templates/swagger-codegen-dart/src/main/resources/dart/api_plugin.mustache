part of {{pubName}}.sdk;

class RequestPluginInput {
  String url;
  Object/* ? */ body;
  Map<String, String/* ? */> queryParams;
  Map<String, String> headerParams;
  Map<String, String> formParams;
  String/* ? */ contentType;

  RequestPluginInput({@required this.url, this.body, this.queryParams = const <String, String/* ? */>{}, this.headerParams = const {}, this.formParams = const {}, this.contentType});
}

abstract class RequestPlugin {

  Future<RequestPluginInput> transformRequest(RequestPluginInput requestParameter);

}

abstract class ResponsePlugin {

  bool runOnFailure;

  Future<dynamic> transformResponse({Response/* ? */ response, dynamic/* ? */ value, String/* ? */ targetType, @required ApiTypes apiType});

  ResponsePlugin(this.runOnFailure);
}
