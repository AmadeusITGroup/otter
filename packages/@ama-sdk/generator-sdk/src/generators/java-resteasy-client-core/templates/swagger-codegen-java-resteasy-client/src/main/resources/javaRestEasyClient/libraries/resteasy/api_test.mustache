{{>licenseInfo}}

package {{invokerPackage}}.api;

import {{invokerPackage}}.ApiException;
import {{invokerPackage}}.api.{{classname}}WrappedApiImpl;

import {{modelPackage}}.endpoints.{{classname}}WrappedApi;

{{#imports}}import {{import}};
{{/imports}}
import org.junit.Test;
import org.junit.Ignore;

{{^fullJavaUtil}}
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
{{/fullJavaUtil}}

/**
 * API tests for {{classname}}
 */
@Ignore
public class {{classname}}WrappedApiTest {

    private final {{classname}}WrappedApi api = new {{classname}}WrappedApiImpl();

    {{#operations}}{{#operation}}
    /**
     * {{summary}}
     *
     * {{notes}}
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void {{operationId}}Test() throws ApiException {
        {{#vendorExtensions.x-request-wrapper-model-type}}
            {{vendorExtensions.x-request-wrapper-model-type}} request = new {{vendorExtensions.x-request-wrapper-model-type}}();
            {{#returnType}}{{{returnType}}} response = {{/returnType}}api.{{operationId}}(request);
        {{/vendorExtensions.x-request-wrapper-model-type}}

        // TODO: test validations
    }
    {{/operation}}{{/operations}}
}
