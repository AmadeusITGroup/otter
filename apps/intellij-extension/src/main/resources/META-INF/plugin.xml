<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
  <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
  <id>com.amadeus.otter-extension</id>

  <!-- Public plugin name should be written in Title Case.
       Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
  <name>Otter Extension</name>

  <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
  <vendor url="https://www.amadeus.com">Amadeus</vendor>

  <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
       Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
       Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
  <description><![CDATA[
<p>This package contains the IntelliJ plugin for Otter framework with comprehensive development tools.</p>

<h3>Available Commands</h3>

<h4>Extract</h4>
<ul>
<li><strong>Extract SCSS property to o3r.variable</strong> - Extract a single SCSS property into an o3r.variable</li>
<li><strong>Extract all SCSS properties to o3r.variables</strong> - Extract all SCSS properties in the file using o3r variables</li>
</ul>

<h4>Generate</h4>
<ul>
<li><strong>Generate Component</strong> - Generate an Otter Angular component</li>
<li><strong>Generate Service</strong> - Generate an Otter service</li>
<li><strong>Generate Store</strong> - Generate a Store based on NgRX</li>
<li><strong>Generate Module</strong> - Generate an Otter Module</li>
<li><strong>Generate Fixture</strong> - Generate functions to an Otter fixture based on a selector and default methods</li>
</ul>

<h4>Module Management</h4>
<ul>
<li><strong>Add Otter Modules</strong> - Add Otter modules to your project using ng add</li>
</ul>

<h4>Add to Component</h4>
<ul>
<li><strong>Add Analytics to Component</strong> - Generate analytics architecture for the selected component</li>
<li><strong>Add Configuration to Component</strong> - Generate configuration architecture for the selected component</li>
<li><strong>Add Context to Component</strong> - Generate context architecture for the selected component</li>
<li><strong>Add Fixture to Component</strong> - Generate fixture architecture for the selected component</li>
<li><strong>Add Iframe to Component</strong> - Generate an iframe for the selected component</li>
<li><strong>Add Localization to Component</strong> - Generate localization architecture for the selected component</li>
<li><strong>Add Localization Key to Component</strong> - Add new localization key with the necessary template modification</li>
<li><strong>Add Rules Engine to Component</strong> - Generate rules engine architecture for the selected component</li>
<li><strong>Add Theming to Component</strong> - Generate theming architecture for the selected component</li>
<li><strong>Convert Angular Component</strong> - Convert the selected Angular component into an Otter component</li>
</ul>

<h3>IntelliSense Features</h3>
<ul>
<li><strong>SCSS Styling Completion</strong> - Auto-completion for o3r.variable in SCSS files</li>
<li><strong>Configuration Tags Completion</strong> - Auto-completion for @o3rWidget and @o3rWidgetParam in JSDoc comments</li>
</ul>

<h3>Usage</h3>
<p>You can execute actions via:</p>
<ul>
<li>Right click → Otter (in editor or project view)</li>
<li>Any refactor menu of the IDE</li>
<li>Main menu → Tools → Otter</li>
</ul>

<h3>Settings</h3>
<p>To access the settings of the plugin:</p>
<ul>
<li>Open the settings of your IDEA</li>
<li>Go to the Editor section</li>
<li>Otter Extractor Settings</li>
</ul>

<p>You can set the prefix of your app and the forbidden words - which will be escaped from the extraction</p>
]]></description>

  <!-- Product and plugin compatibility requirements.
       Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
  <depends>com.intellij.modules.platform</depends>
  <depends>JavaScript</depends>
  <depends>org.jetbrains.plugins.scss</depends>
  <depends>com.intellij.modules.terminal</depends>

  <!-- Extension points defined by the plugin.
       Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
  <extensions defaultExtensionNs="com.intellij">
    <applicationConfigurable
      displayName="Otter Extractor Settings"
      parentId="editor"
      id="com.amadeus.otterextension.Extractor"
      instance="com.amadeus.otterextension.ExtractorSettingsPage">
    </applicationConfigurable>
    
    <!-- Completion contributors for intellisense -->
    <completion.contributor 
      language="SCSS" 
      implementationClass="com.amadeus.otterextension.intellisense.StylingCompletionContributor"/>
    <completion.contributor 
      language="TypeScript" 
      implementationClass="com.amadeus.otterextension.intellisense.ConfigurationCompletionContributor"/>
    <completion.contributor 
      language="JavaScript" 
      implementationClass="com.amadeus.otterextension.intellisense.ConfigurationCompletionContributor"/>
  </extensions>
  <actions>
    <group id="com.amadeus.otterextension" text="Otter" popup="true" icon="com.amadeus.otterextension.OtterIcons.OtterLogo">
      <add-to-group group-id="EditorPopupMenu" anchor="last"/>
      
      <!-- Extract Actions -->
      <action id="com.amadeus.otterextension.ExtractToVariableAction"
              class="com.amadeus.otterextension.ExtractToVariableAction" 
              text="Extract SCSS property to o3r.variable" 
              description="Extract the selected SCSS property using o3r variables">
      </action>
      
      <action id="com.amadeus.otterextension.actions.extract.ExtractAllToVariableAction"
              class="com.amadeus.otterextension.actions.extract.ExtractAllToVariableAction"
              text="Extract all SCSS properties to o3r.variables"
              description="Extract all SCSS properties in the file using o3r variables">
      </action>
      
      <separator/>
      
      <!-- Generate Actions -->
      <group id="com.amadeus.otterextension.generate" text="Generate" popup="true">
        <action id="com.amadeus.otterextension.actions.generate.GenerateComponentAction"
                class="com.amadeus.otterextension.actions.generate.GenerateComponentAction"
                text="Generate Component"
                description="Generate an Otter Angular component">
        </action>
        
        <action id="com.amadeus.otterextension.actions.generate.GenerateServiceAction"
                class="com.amadeus.otterextension.actions.generate.GenerateServiceAction"
                text="Generate Service"
                description="Generate an Otter service">
        </action>
        
        <action id="com.amadeus.otterextension.actions.generate.GenerateStoreAction"
                class="com.amadeus.otterextension.actions.generate.GenerateStoreAction"
                text="Generate Store"
                description="Generate a Store based on NgRX">
        </action>
        
        <action id="com.amadeus.otterextension.actions.generate.GenerateModuleAction"
                class="com.amadeus.otterextension.actions.generate.GenerateModuleAction"
                text="Generate Module"
                description="Generate an Otter Module">
        </action>
        
        <action id="com.amadeus.otterextension.actions.generate.GenerateFixtureAction"
                class="com.amadeus.otterextension.actions.generate.GenerateFixtureAction"
                text="Generate Fixture"
                description="Generate functions to an Otter fixture based on a selector and default methods">
        </action>
      </group>
      
      <separator/>
      
      <!-- Module Actions -->
      <action id="com.amadeus.otterextension.actions.module.AddModuleAction"
              class="com.amadeus.otterextension.actions.module.AddModuleAction"
              text="Add Otter Modules"
              description="Add Otter modules to your project">
      </action>
      
      <separator/>
      
      <!-- Component Enhancement Actions -->
      <group id="com.amadeus.otterextension.enrich" text="Add to Component" popup="true">
        <action id="com.amadeus.otterextension.actions.enrich.AddAnalyticsToComponentAction"
                class="com.amadeus.otterextension.actions.enrich.AddAnalyticsToComponentAction"
                text="Add Analytics to Component"
                description="Generate analytics architecture for the selected component">
        </action>
        
        <action id="com.amadeus.otterextension.actions.enrich.AddConfigurationToComponentAction"
                class="com.amadeus.otterextension.actions.enrich.AddConfigurationToComponentAction"
                text="Add Configuration to Component"
                description="Generate configuration architecture for the selected component">
        </action>
        
        <action id="com.amadeus.otterextension.actions.enrich.AddContextToComponentAction"
                class="com.amadeus.otterextension.actions.enrich.AddContextToComponentAction"
                text="Add Context to Component"
                description="Generate context architecture for the selected component">
        </action>
        
        <action id="com.amadeus.otterextension.actions.enrich.AddFixtureToComponentAction"
                class="com.amadeus.otterextension.actions.enrich.AddFixtureToComponentAction"
                text="Add Fixture to Component"
                description="Generate fixture architecture for the selected component">
        </action>
        
        <action id="com.amadeus.otterextension.actions.enrich.AddIframeToComponentAction"
                class="com.amadeus.otterextension.actions.enrich.AddIframeToComponentAction"
                text="Add Iframe to Component"
                description="Generate an iframe for the selected component">
        </action>
        
        <action id="com.amadeus.otterextension.actions.enrich.AddLocalizationToComponentAction"
                class="com.amadeus.otterextension.actions.enrich.AddLocalizationToComponentAction"
                text="Add Localization to Component"
                description="Generate localization architecture for the selected component">
        </action>
        
        <action id="com.amadeus.otterextension.actions.enrich.AddLocalizationKeyToComponentAction"
                class="com.amadeus.otterextension.actions.enrich.AddLocalizationKeyToComponentAction"
                text="Add Localization Key to Component"
                description="Add new localization key with the necessary template modification">
        </action>
        
        <action id="com.amadeus.otterextension.actions.enrich.AddRulesEngineToComponentAction"
                class="com.amadeus.otterextension.actions.enrich.AddRulesEngineToComponentAction"
                text="Add Rules Engine to Component"
                description="Generate rules engine architecture for the selected component">
        </action>
        
        <action id="com.amadeus.otterextension.actions.enrich.AddThemingToComponentAction"
                class="com.amadeus.otterextension.actions.enrich.AddThemingToComponentAction"
                text="Add Theming to Component"
                description="Generate theming architecture for the selected component">
        </action>
        
        <action id="com.amadeus.otterextension.actions.enrich.ConvertComponentAction"
                class="com.amadeus.otterextension.actions.enrich.ConvertComponentAction"
                text="Convert Angular Component"
                description="Convert the selected Angular component into an Otter component">
        </action>
      </group>
    </group>
    
    <!-- Actions also available from Project View -->
    <group id="com.amadeus.otterextension.projectview" text="Otter" popup="true" icon="com.amadeus.otterextension.OtterIcons.OtterLogo">
      <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
      <reference ref="com.amadeus.otterextension.actions.generate.GenerateComponentAction"/>
      <reference ref="com.amadeus.otterextension.actions.generate.GenerateServiceAction"/>
      <reference ref="com.amadeus.otterextension.actions.generate.GenerateStoreAction"/>
      <reference ref="com.amadeus.otterextension.actions.generate.GenerateModuleAction"/>
      <reference ref="com.amadeus.otterextension.actions.module.AddModuleAction"/>
    </group>
  </actions>
</idea-plugin>
